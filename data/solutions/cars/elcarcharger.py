# -*- coding: utf-8 -*-
"""elcarcharger.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lTc2H5xEcfLFwZzqTOL80l-CnEZ7Fy6i
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import linprog

def least_absolute_deviation(x,y):
    x = np.array(x)
    y = np.array(y)

    matF = np.vstack((np.ones_like(x), x))
    m, n = matF.shape

    matA = np.zeros((2* n, m + n))
    matA[:n, :m] =+ matF.T
    matA[n:, :m] =- matF.T
    matA[:n, m:] =- np.eye(n)
    matA[n:, m:] =- np.eye (n)
    vecB = np.zeros(2*n)
    vecB[:n] =+ y
    vecB[n:] =- y

    vecC = np.hstack((np.zeros(m), np.ones(n)))

    result = linprog(vecC, A_ub = matA, b_ub = vecB, bounds = (None, None))
    vecWLAD = result.x[:m]

    if result.success:
        return vecWLAD[0], vecWLAD[1]
    else:
        print('NO SOLUTION FOUND')
        print(result.message)

years = [2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022]
CPEV = [0, 0.078947, 0.05, 0.059406, 0.054217, 0.026706, 0.013025, 0.007944]

# Define the rescaling lambda function
rescaling_lambda = lambda cpev, reference=0.1: ((reference - cpev) / reference) * 100


rescaled_CPEV = [rescaling_lambda(c) for c in CPEV]

m_lad, k_lad = least_absolute_deviation(years,CPEV)
k_ls, m_ls = np.polyfit(years,CPEV, deg = 1)

print("Slope of LAD:", k_lad)
print("Slope of LS:", k_ls)

plt.plot(years, CPEV, marker='o', linestyle='-', color='b', label = 'Ale')
plt.plot(years, k_lad*np.array(years)+m_lad, linestyle='-', color='r', label = 'Ale LAD Trend')
plt.plot(years, k_ls*np.array(years)+m_ls, linestyle='-', color='g', label = 'Ale LS Trend')
plt.hlines(0.1 ,years[0], years[-1], linestyle='--', color = 'k', label = 'Reference')
plt.title('CPEV Over the Years')
plt.xlabel('Years')
plt.ylabel('CPEV')
plt.grid()
plt.legend()
plt.show()

m_lad, k_lad = least_absolute_deviation(years,rescaled_CPEV)
k_ls, m_ls = np.polyfit(years,rescaled_CPEV, deg = 1)

print("Slope of LAD:", k_lad)
print("Slope of LS:", k_ls)

plt.plot(years, rescaled_CPEV, marker='o', linestyle='-', color='b', label = 'Ale')
plt.plot(years, k_lad*np.array(years)+m_lad, linestyle='-', color='r', label = 'Ale LAD Trend')
plt.plot(years, k_ls*np.array(years)+m_ls, linestyle='-', color='g', label = 'Ale LS Trend')
plt.hlines(0 ,years[0], years[-1], linestyle='--', color = 'k', label = 'Reference')
plt.title('CPEV Over the Years')
plt.xlabel('Years')
plt.ylabel('CPEV')
plt.grid()
plt.legend()
plt.show()